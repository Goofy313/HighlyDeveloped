@inherits Umbraco.Web.Mvc.UmbracoViewPage<ContentModels.NewsArticle>
@using ContentModels = Umbraco.Web.PublishedModels;
<!-- using Umbraco.Core.PropertyEditors.ValueConverters to use imageCropper  -->
@using Umbraco.Core.PropertyEditors.ValueConverters;
@{
    Layout = "Main.cshtml";

    // get a handle on the image
    // Get value from article image
    var imgCropper = Model.Value<ImageCropperValue>("articleImage");
    // Get image Url
    var imgUrl = imgCropper.Src + imgCropper.GetCropUrl("Main");
    // Get a handle on related related content
    var relatedArticles = Model.Value<IList<IPublishedContent>>("articleRelatedContent");
}

<article class="container">
    <header class="text-center">
        <div class="row">
            <div class="col">
                <h1 class="display-4 mt-5">@Model.Name</h1>
                <div class=" meta mb-5">
                    <ul class="list-unstyled list-inline">
                        <li class="list-inline-item">
                            <i class="fa fa-user"></i> @Model.Arthur
                        </li>
                        <li class="list-inline-item">
                            <i class="fa fa-calendar"></i>
                            @Model.PostDate.ToString("dd-MMM-yyy HH:mm")
                        </li>
                    </ul>
                </div>
            </div>
        </div>

        <div class="row mb-1">
            <div class="col">
                @Model.Title
            </div>
        </div>

        <div class="row">
            <div class="col">
                <img src="@imgUrl" alt="" class="w-100" />
            </div>
        </div>

    </header>

    <div class="row mt-1">
        <div class="col">
            @Model.Content
        </div>
    </div>

    <footer class="border d-flex flex-coloum flex-md-row justify-content-between mt-5 mb-5">
        <div class="d-flex align-item-center px-4">
            <div class="d-flex flex-column">
                <div class="d-flex">Author: @Model.Arthur</div>
                <!-- Convert to list  String.Join -->
                <div class="d-flex">Categories: @String.Join(",", Model.Catergory)</div>
            </div>
        </div>
    </footer>
</article>

<!-- Get Related Articles -->
@if(relatedArticles != null && relatedArticles.Count > 0)
{
    
    <div class="container mb-5">
        <h2>Related Articles</h2>
        <div class="row row-cols-1 row-cols-md-2 g-4">
            @foreach(var article in relatedArticles)
            {
              var relatedImgCropper = article.Value<ImageCropperValue>("articleImage");
              var thumbnailUrl = relatedImgCropper.Src + relatedImgCropper.GetCropUrl("Thumbnail");
            
              <div class="col">
                <div class="card h-100">
                  <img src="@thumbnailUrl" class="card-img-top" alt="...">
                  <div class="card-body">
                    <h5 class="card-title">@article.Name</h5>
                    <p class="card-text">@article.Value("title")</p>
                    
                  </div>
                  <div class="card-footer text-muted">
                    <a href="@article.Url">Read more</a>
                  </div>
                </div>
              </div>
            }
        </div>
    </div>
    
}